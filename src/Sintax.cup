import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;

    public void syntax_error(Symbol s){
        this.s = s;
    }
    
    public Symbol getS(){
        return this.s;
    }
:};

terminal TKNVARIABLES, TKNDOSPUNTOS, TKNVARIABLE, TKNENTERO, TKNDECIMAL, TKNSIMBOLO, TKNTEXTO, TKNLOGICO, TKNRFC, TKNCURP,
    TKNCDPRINCIPAL, TKNFUNCIONES, TKNPROCEDIMIENTOS, TKNFUNCION, TKNDEVOLVER, TKNCOMO, TKNPROCEDIMIENTO, TKNINICIOESTRUCTURA,
    TKNFINESTRUCTURA, TKNPUNTO, TKNSI, TKNENTONCES, TKNSINO, TKNPARA, TKNMIENTRAS, TKNROMPER, TKNSUMA, TKNRESTA,
    TKNMULTIPLICACION, TKNDIVISION, TKNMODULO, TKNINCREMENTO, TKNDECREMENTO, TKNIGUAL, TKNSUMAIGUAL, TKNRESTAIGUAL,
    TKNMULTIGUAL, TKNDIVIGUAL, TKNMODIGUAL, TKNIGUALOG, TKNDISTINTO, TKNMAYOR, TKNMENOR, TKNMAYORIGUAL, TKNMENORIGUAL,
    TKNY, TKNO, TKNNEGACION, TKNPARENTESISABRE, TKNPARENTESISCIERRA, TKNCOMA, TKNDATORFC, TKNDATOCURP, TKNINT, TKNCADENA,
    TKNSIMBOLOVALOR, TKNVERDADERO, TKNFALSO, TKNFECHAVALOR, TKNHORAVALOR, TKNFECHAHORAVALOR, TKNID, ERROR;
non terminal NTINICIO, NTVARIABLES, NTDECLARARVARIABLE;

start with NTINICIO;

NTINICIO ::= TKNVARIABLES;